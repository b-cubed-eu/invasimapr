% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/assemble_matrices.R
\name{assemble_matrices}
\alias{assemble_matrices}
\title{Assemble site- and species-specific competition/impact matrices}
\usage{
assemble_matrices(
  a_ij,
  Nstar,
  invader_pred_wide = NULL,
  predictions = NULL,
  env_dist,
  sigma_e = NULL,
  K_env = NULL
)
}
\arguments{
\item{a_ij}{numeric matrix (invaders × residents).
Trait-based competition coefficients (e.g., from \code{compute_competition()}).
Row names = invader IDs; column names = resident IDs.}

\item{Nstar}{numeric matrix (residents × sites).
Resident abundances by site (e.g., from \code{compute_interaction_strength()}).
Row names = resident IDs; column names = site IDs.}

\item{invader_pred_wide}{numeric matrix (sites × invaders) or \code{NULL}.
Site × invader abundances on the response scale.
If \code{NULL}, supply \code{predictions} instead.}

\item{predictions}{data.frame or \code{NULL}.
Long table with columns \code{species}, \code{site_id}, \code{pred}.
Used only if \code{invader_pred_wide} is \code{NULL}.}

\item{env_dist}{numeric matrix (sites × residents).
Site–resident environmental distance (e.g., from \code{compute_environment_kernel()}).
Row names = site IDs; column names = resident IDs.}

\item{sigma_e}{numeric or \code{NULL}.
Bandwidth for the Gaussian environmental kernel;
if \code{NULL}, compute the kernel upstream (e.g., \code{compute_environment_kernel(..., kernel = "gaussian")})
and pass it via \code{K_env}.}

\item{K_env}{numeric matrix (sites × residents) or \code{NULL}.
Optional precomputed environmental kernel (similarity) for residents by site.
If supplied, \code{env_dist} and \code{sigma_e} are ignored.}
}
\value{
A list with:
\itemize{
\item \code{I_raw}: 3D array (invaders × residents × sites) of per-pair impact terms.
\item \code{pressure_inv_site}: matrix (invaders × sites) with total pressure on each invader at each site
(sum over residents).
\item \code{meta}: list with matched IDs and dimensions.
}
}
\description{
Builds a 3D array of per-site interaction terms by combining:
(1) invader and resident abundances, (2) trait-based competition coefficients
\eqn{a_{ij}}, and (3) environmental matching between each site and residents.
The result is a tensor \code{I_raw[invader, resident, site]} suitable for
summarising total competitive pressure on each invader at each site.
}
\details{
For site \eqn{s}, invader \eqn{i}, resident \eqn{j}:
\deqn{I_{i j s} = r_{i s}\, r_{j s}\, a_{i j}\, K^{(env)}_{j s},}
where \eqn{r_{i s}} and \eqn{r_{j s}} are predicted (or expected) abundances,
\eqn{a_{i j} = \exp\!\big(-d_{i j}^2/(2\,\sigma_t^2)\big)} is the trait-based competition coefficient,
and \eqn{K^{(env)}_{j s}} is an environmental matching kernel for resident \eqn{j} at site \eqn{s}.
}
\examples{
# comp$a_ij from compute_competition(), cis$Nstar from compute_interaction_strength(),
# ek$env_dist or ek$K_env from compute_environment_kernel(), and 'pred' from predict_invader_response()
am <- assemble_matrices(
  a_ij              = comp$a_ij,
  Nstar             = cis$Nstar,
  predictions       = pred$predictions,  # or invader_pred_wide = <sites × invaders matrix>
  env_dist          = ek$env_dist,
  sigma_e           = ek$sigma_e         # or pass K_env = ek$K_env and omit env_dist/sigma_e
)
dim(am$I_raw); dim(am$pressure_inv_site)

}
